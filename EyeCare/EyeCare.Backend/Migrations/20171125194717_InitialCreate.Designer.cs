// <auto-generated />
using EyeCare.Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EyeCare.Backend.Migrations
{
    [DbContext(typeof(EyeCareDbContext))]
    [Migration("20171125194717_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EyeCare.Backend.Models.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("EyeId");

                    b.Property<int>("PatientId");

                    b.HasKey("DiagnosisId");

                    b.HasIndex("EyeId")
                        .IsUnique()
                        .HasFilter("[EyeId] IS NOT NULL");

                    b.HasIndex("PatientId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("EyeCare.Backend.Models.Eye", b =>
                {
                    b.Property<int>("EyeId")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Data");

                    b.Property<string>("DiagnosisId");

                    b.HasKey("EyeId");

                    b.ToTable("Eyes");
                });

            modelBuilder.Entity("EyeCare.Backend.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<string>("Surname");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("EyeCare.Backend.Models.Diagnosis", b =>
                {
                    b.HasOne("EyeCare.Backend.Models.Eye", "Eye")
                        .WithOne("Diagnosis")
                        .HasForeignKey("EyeCare.Backend.Models.Diagnosis", "EyeId");

                    b.HasOne("EyeCare.Backend.Models.Patient", "Patient")
                        .WithMany("Diagnoses")
                        .HasForeignKey("PatientId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
